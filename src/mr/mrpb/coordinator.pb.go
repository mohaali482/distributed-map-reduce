// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: coordinator.proto

package mrpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_IDLE        TaskStatus = 0
	TaskStatus_IN_PROGRESS TaskStatus = 1
	TaskStatus_COMPLETED   TaskStatus = 2
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "IDLE",
		1: "IN_PROGRESS",
		2: "COMPLETED",
	}
	TaskStatus_value = map[string]int32{
		"IDLE":        0,
		"IN_PROGRESS": 1,
		"COMPLETED":   2,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_coordinator_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_coordinator_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

type TaskType int32

const (
	TaskType_MAP    TaskType = 0
	TaskType_REDUCE TaskType = 1
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "MAP",
		1: "REDUCE",
	}
	TaskType_value = map[string]int32{
		"MAP":    0,
		"REDUCE": 1,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_coordinator_proto_enumTypes[1].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_coordinator_proto_enumTypes[1]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    TaskStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=mr.TaskStatus" json:"status,omitempty"`
	WorkerId  string               `protobuf:"bytes,3,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	StartedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_coordinator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_IDLE
}

func (x *Task) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *Task) GetStartedAt() *timestamp.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type MapTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	NReducer int32  `protobuf:"varint,2,opt,name=n_reducer,json=nReducer,proto3" json:"n_reducer,omitempty"`
	Task     *Task  `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *MapTask) Reset() {
	*x = MapTask{}
	mi := &file_coordinator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapTask) ProtoMessage() {}

func (x *MapTask) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapTask.ProtoReflect.Descriptor instead.
func (*MapTask) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{1}
}

func (x *MapTask) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *MapTask) GetNReducer() int32 {
	if x != nil {
		return x.NReducer
	}
	return 0
}

func (x *MapTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type ReduceTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files  []string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Reduce int32    `protobuf:"varint,2,opt,name=reduce,proto3" json:"reduce,omitempty"`
	Task   *Task    `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *ReduceTask) Reset() {
	*x = ReduceTask{}
	mi := &file_coordinator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReduceTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceTask) ProtoMessage() {}

func (x *ReduceTask) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceTask.ProtoReflect.Descriptor instead.
func (*ReduceTask) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{2}
}

func (x *ReduceTask) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ReduceTask) GetReduce() int32 {
	if x != nil {
		return x.Reduce
	}
	return 0
}

func (x *ReduceTask) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type RequestTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId string `protobuf:"bytes,1,opt,name=workerId,proto3" json:"workerId,omitempty"`
}

func (x *RequestTaskRequest) Reset() {
	*x = RequestTaskRequest{}
	mi := &file_coordinator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTaskRequest) ProtoMessage() {}

func (x *RequestTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTaskRequest.ProtoReflect.Descriptor instead.
func (*RequestTaskRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{3}
}

func (x *RequestTaskRequest) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type RequestTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType TaskType `protobuf:"varint,1,opt,name=taskType,proto3,enum=mr.TaskType" json:"taskType,omitempty"`
	// Types that are assignable to Task:
	//
	//	*RequestTaskReply_MapTask
	//	*RequestTaskReply_ReduceTask
	Task isRequestTaskReply_Task `protobuf_oneof:"task"`
	Done bool                    `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	Wait bool                    `protobuf:"varint,5,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *RequestTaskReply) Reset() {
	*x = RequestTaskReply{}
	mi := &file_coordinator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTaskReply) ProtoMessage() {}

func (x *RequestTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTaskReply.ProtoReflect.Descriptor instead.
func (*RequestTaskReply) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{4}
}

func (x *RequestTaskReply) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_MAP
}

func (m *RequestTaskReply) GetTask() isRequestTaskReply_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *RequestTaskReply) GetMapTask() *MapTask {
	if x, ok := x.GetTask().(*RequestTaskReply_MapTask); ok {
		return x.MapTask
	}
	return nil
}

func (x *RequestTaskReply) GetReduceTask() *ReduceTask {
	if x, ok := x.GetTask().(*RequestTaskReply_ReduceTask); ok {
		return x.ReduceTask
	}
	return nil
}

func (x *RequestTaskReply) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *RequestTaskReply) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type isRequestTaskReply_Task interface {
	isRequestTaskReply_Task()
}

type RequestTaskReply_MapTask struct {
	MapTask *MapTask `protobuf:"bytes,2,opt,name=mapTask,proto3,oneof"`
}

type RequestTaskReply_ReduceTask struct {
	ReduceTask *ReduceTask `protobuf:"bytes,3,opt,name=reduceTask,proto3,oneof"`
}

func (*RequestTaskReply_MapTask) isRequestTaskReply_Task() {}

func (*RequestTaskReply_ReduceTask) isRequestTaskReply_Task() {}

type FinishTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskType TaskType `protobuf:"varint,1,opt,name=taskType,proto3,enum=mr.TaskType" json:"taskType,omitempty"`
	TaskId   int32    `protobuf:"varint,2,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *FinishTaskRequest) Reset() {
	*x = FinishTaskRequest{}
	mi := &file_coordinator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishTaskRequest) ProtoMessage() {}

func (x *FinishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishTaskRequest.ProtoReflect.Descriptor instead.
func (*FinishTaskRequest) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{5}
}

func (x *FinishTaskRequest) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_MAP
}

func (x *FinishTaskRequest) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type FinishTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishTaskReply) Reset() {
	*x = FinishTaskReply{}
	mi := &file_coordinator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinishTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishTaskReply) ProtoMessage() {}

func (x *FinishTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_coordinator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishTaskReply.ProtoReflect.Descriptor instead.
func (*FinishTaskReply) Descriptor() ([]byte, []int) {
	return file_coordinator_proto_rawDescGZIP(), []int{6}
}

var File_coordinator_proto protoreflect.FileDescriptor

var file_coordinator_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6d, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x61, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x5f, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x22, 0x58, 0x0a, 0x0a, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x6d, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x30,
	0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xc7, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x6d, 0x72, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6d, 0x72, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x72, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x65, 0x64, 0x75, 0x63, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x11, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0c, 0x2e, 0x6d, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2a, 0x36, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x1f, 0x0a, 0x08,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x50, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x55, 0x43, 0x45, 0x10, 0x01, 0x32, 0x84, 0x01,
	0x0a, 0x0b, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x6d,
	0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x6d, 0x72, 0x2e, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6d, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x6d, 0x72, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_coordinator_proto_rawDescOnce sync.Once
	file_coordinator_proto_rawDescData = file_coordinator_proto_rawDesc
)

func file_coordinator_proto_rawDescGZIP() []byte {
	file_coordinator_proto_rawDescOnce.Do(func() {
		file_coordinator_proto_rawDescData = protoimpl.X.CompressGZIP(file_coordinator_proto_rawDescData)
	})
	return file_coordinator_proto_rawDescData
}

var file_coordinator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_coordinator_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_coordinator_proto_goTypes = []any{
	(TaskStatus)(0),             // 0: mr.TaskStatus
	(TaskType)(0),               // 1: mr.TaskType
	(*Task)(nil),                // 2: mr.Task
	(*MapTask)(nil),             // 3: mr.MapTask
	(*ReduceTask)(nil),          // 4: mr.ReduceTask
	(*RequestTaskRequest)(nil),  // 5: mr.RequestTaskRequest
	(*RequestTaskReply)(nil),    // 6: mr.RequestTaskReply
	(*FinishTaskRequest)(nil),   // 7: mr.FinishTaskRequest
	(*FinishTaskReply)(nil),     // 8: mr.FinishTaskReply
	(*timestamp.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_coordinator_proto_depIdxs = []int32{
	0,  // 0: mr.Task.status:type_name -> mr.TaskStatus
	9,  // 1: mr.Task.started_at:type_name -> google.protobuf.Timestamp
	2,  // 2: mr.MapTask.task:type_name -> mr.Task
	2,  // 3: mr.ReduceTask.task:type_name -> mr.Task
	1,  // 4: mr.RequestTaskReply.taskType:type_name -> mr.TaskType
	3,  // 5: mr.RequestTaskReply.mapTask:type_name -> mr.MapTask
	4,  // 6: mr.RequestTaskReply.reduceTask:type_name -> mr.ReduceTask
	1,  // 7: mr.FinishTaskRequest.taskType:type_name -> mr.TaskType
	5,  // 8: mr.Coordinator.RequestTask:input_type -> mr.RequestTaskRequest
	7,  // 9: mr.Coordinator.FinishTask:input_type -> mr.FinishTaskRequest
	6,  // 10: mr.Coordinator.RequestTask:output_type -> mr.RequestTaskReply
	8,  // 11: mr.Coordinator.FinishTask:output_type -> mr.FinishTaskReply
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_coordinator_proto_init() }
func file_coordinator_proto_init() {
	if File_coordinator_proto != nil {
		return
	}
	file_coordinator_proto_msgTypes[4].OneofWrappers = []any{
		(*RequestTaskReply_MapTask)(nil),
		(*RequestTaskReply_ReduceTask)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coordinator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coordinator_proto_goTypes,
		DependencyIndexes: file_coordinator_proto_depIdxs,
		EnumInfos:         file_coordinator_proto_enumTypes,
		MessageInfos:      file_coordinator_proto_msgTypes,
	}.Build()
	File_coordinator_proto = out.File
	file_coordinator_proto_rawDesc = nil
	file_coordinator_proto_goTypes = nil
	file_coordinator_proto_depIdxs = nil
}
